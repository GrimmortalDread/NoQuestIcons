name: Build and Draft Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET 9.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      # Download and install Dalamud to the path SDK checks
      - name: Download Dalamud runtime
        run: |
          curl -L https://goatcorp.github.io/dalamud-distrib/latest.zip -o dalamud.zip
          mkdir -p $HOME/.xlcore/dalamud/Hooks/dev
          unzip -q dalamud.zip -d $HOME/.xlcore/dalamud/Hooks/dev

      - name: Restore dependencies
        run: dotnet restore

      - name: Build plugin
        run: dotnet build --configuration Release --no-restore

      - name: Package plugin
        run: |
          mkdir package
          cp src/bin/Release/net9.0*/NoQuestIcons.dll package/
          cp NoQuestIcons.json package/
          zip -j NoQuestIcons.zip package/*

      - name: Extract changelog for this version
        id: changelog
        run: |
          version="${GITHUB_REF_NAME}" # e.g. v1.0.6
          start=$(grep -n "## \[$version\]" CHANGELOG.md | cut -d: -f1)
          if [ -z "$start" ]; then
            echo "content=No changelog entry for $version" >> $GITHUB_OUTPUT
            exit 0
          fi
          next=$(grep -n "## \[" CHANGELOG.md | awk -F: -v s=$start '$1 > s {print $1; exit}')
          if [ -z "$next" ]; then next=$(wc -l < CHANGELOG.md); fi
          content=$(sed -n "${start},$((next-1))p" CHANGELOG.md)
          echo "content<<EOF" >> $GITHUB_OUTPUT
          echo "$content" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release Draft
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.content }}
          draft: true
          files: |
            NoQuestIcons.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
